{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "customersource"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "target"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "lssqlgit",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "lssqlgit",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "exists1"
				},
				{
					"name": "select3"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select4"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Cusid as integer,",
				"          name as string,",
				"          location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select * from customer\\n',",
				"     format: 'query') ~> customersource",
				"source(output(",
				"          Custkey as integer,",
				"          custid as integer,",
				"          name as string,",
				"          location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select * from dimcustomer\\n',",
				"     format: 'query') ~> target",
				"customersource select(mapColumn(",
				"          src_Cusid = Cusid,",
				"          src_name = name,",
				"          src_location = location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"target select(mapColumn(",
				"          Custkey,",
				"          trg_custid = custid,",
				"          trg_name = name,",
				"          trg_location = location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select1, select2 exists(src_Cusid == trg_custid,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 select(mapColumn(",
				"          Cusid = src_Cusid,",
				"          name = src_name,",
				"          location = src_location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select1, select2 lookup(src_Cusid == trg_custid,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 derive(isupdated = iif\r",
				"(src_name!=trg_name || src_location!=trg_location, 1,0)\r",
				") ~> derivedColumn1",
				"derivedColumn1 filter(isupdated == 1) ~> filter1",
				"filter1 select(mapColumn(",
				"          Custkey,",
				"          Cusid = src_Cusid,",
				"          name = src_name,",
				"          location = src_location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select4 alterRow(updateIf(1 == 1)) ~> alterRow1",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Custkey as integer,",
				"          custid as integer,",
				"          name as string,",
				"          location as string",
				"     ),",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'dimcustomer',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Cusid,",
				"          name,",
				"          location",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Custkey as integer,",
				"          custid as integer,",
				"          name as string,",
				"          location as string",
				"     ),",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'dimcustomer',",
				"     insertable: false,",
				"     updateable: true,",
				"     deletable: false,",
				"     upsertable: false,",
				"     keys:['Custkey'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Custkey,",
				"          Cusid,",
				"          name,",
				"          location",
				"     )) ~> sink2"
			]
		}
	}
}